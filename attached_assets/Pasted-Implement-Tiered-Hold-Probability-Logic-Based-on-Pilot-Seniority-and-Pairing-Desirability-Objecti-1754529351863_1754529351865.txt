Implement Tiered Hold Probability Logic Based on Pilot Seniority and Pairing Desirability
ðŸŽ¯ Objective:
Create a function getHoldProbability() that estimates the likelihood a pilot will hold a trip, using rule-based logic without historical data. The output should fall into one of four fixed probability tiers matching PBS-style award behavior.

ðŸ“¥ Input Parameters:
seniorityPercentile: number (0â€“100):
Userâ€™s seniority percentile (lower is more senior).

desirabilityScore: number (0â€“100):
Score representing trip desirability (e.g. higher credit, lower block, more deadheads = higher desirability).

pairingFrequency: number:
Number of times this trip appears in the bid package (e.g. 1 = rare, 3+ = common).

startsOnWeekend: boolean:
Whether the trip starts on Saturday or Sunday.

includesDeadheads: number:
Number of deadhead legs included.

includesWeekendOff: boolean:
Whether the pairing includes time off over a weekend (Fridayâ€“Sunday).

ðŸŽ¯ Output:
Return a rounded hold probability in one of these bands, with an optional randomization of Â±5%:

100% â†’ Very Likely

75% â†’ Likely

50% â†’ Unlikely

25% â†’ Very Unlikely

ðŸ§  Hold Probability Tier Logic:
Use the following logic tree to assign the proper tier. Rules compound, so multiple matching traits strengthen the case.

ðŸ”µ Very Likely (100%)
Assign when:

desirabilityScore < 40

pairingFrequency â‰¥ 3

startsOnWeekend === true

includesDeadheads <= 1

includesWeekendOff === false

AND seniorityPercentile <= 75 (bottom 75% of pilots)

ðŸŸ¢ Likely (75%)
Assign when:

desirabilityScore < 60

pairingFrequency â‰¥ 2

includesDeadheads <= 2

Not extremely popular (mid desirability)

OR user is in bottom 50% (seniorityPercentile > 50)

ðŸŸ  Unlikely (50%)
Assign when:

desirabilityScore 60â€“80

pairingFrequency = 1â€“2

includesDeadheads â‰¥ 2

May include a weekend off

User is in middle 50% (seniority 25â€“75)

ðŸ”´ Very Unlikely (25%)
Assign when:

desirabilityScore > 80

pairingFrequency = 1

includesDeadheads â‰¥ 2

includesWeekendOff === true

startsOnWeekend === false

seniorityPercentile <= 25 (top 25%, more senior = harder to hold)

ðŸ”§ Implementation Notes:
Round final output to exact 25% tiers (no in-betweens).

Add optional Â±5% randomizer for realism (clamped 0â€“100).

Return both the numerical probability and label (e.g., 75% - Likely) if possible.

Use console.log() to show which rules were triggered and why a tier was chosen.

Keep all logic client-side.